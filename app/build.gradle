buildscript {
    ext.kotlin_version = '1.3.30'
    ext.acraVersion = '5.1.3'
    ext.retrofitVersion = '2.5.0'
    ext.okhttpVersion = '3.14.0'

    repositories {
        mavenCentral()
        google()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'com.gladed.androidgitversion' version '0.4.7'
}

repositories {
    jcenter()
    mavenCentral()
    maven {
        url "https://jitpack.io"
    }
}

androidGitVersion {
    codeFormat 'MNNPPPPPP'
    format '%tag%'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/main.kotlin_module'
    }

    defaultConfig {
        applicationId "org.blokada"
        minSdkVersion 21
        targetSdkVersion 28
        versionName androidGitVersion.name()
        versionCode androidGitVersion.code()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86'
        }
    }

    lintOptions {
        abortOnError false
    }

    signingConfigs {
        // Set the BLOKADA_* constants in your ~/.gradle/gradle.properties to point to your keystore.
        release {
            keyAlias 'blokada'
            keyPassword BLOKADA_KEY_PASSWORD
            storeFile file(BLOKADA_KEY_PATH)
            storePassword BLOKADA_STORE_PASSWORD
        }
    }

    buildTypes {
        debug {
            // By default it is a 'debuggable' build, signed with a debug key.
        }

        release {
            /**
             * Release builds are published on F-Droid and XDA Labs. They adhere to F-Droid
             * inclusion standards, which means they cannot contain any non-free software or
             * tracking, hence we can provide only limited support for them.
              */
            minifyEnabled false
            useProguard false // We don't use Proguard for now.
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        official {
            /**
             * Official builds are published on blokada.org and Google Play. They contain optional
             * reporting so we can provide better support and troubleshooting.
             */
            initWith(release)
            matchingFallbacks = ['release']
        }

        beta {
            // 'Beta' are builds used for internal and external beta testing.
            initWith(release)
            matchingFallbacks = ['release']
        }
    }

    // It needs to be defined in order for the flavor setup to work.
    flavorDimensions("model")

    productFlavors {
        flavorFull {
            // flavorFull lands on blokada.org.
            applicationId "org.blokada.origin.alarm"
        }

        flavorCommunity {
            // flavorCommunity lands on F-Droid and XDA Labs.
            applicationId "org.blokada.alarm"
        }

        flavorGoogle {
            // flavorGoogle build lands on Google Play.
            applicationId "org.blokada.alarm.dnschanger"
        }

        /**
         * You can choose any of those modules in 'Build Variants' in Android Studio to work only on
         * selected modules or run only relevant test suites. You cannot actually run those modules
         * as apps. It is meant to help improve code separation as well as speed up development.
         */

        moduleCore {
            // moduleCore is included by all other Kotlin modules.
        }

        moduleG11n {
            /**
             * moduleG11n (Globalization) provides all i18n (internationalization) and l10n
             * (localization) functionality on top of what Android SDK provides.
              */
        }

        moduleVpn {
            // moduleVpn provides Wireguard client native library and JNI bindings.
        }

        moduleTunnel {
            /**
             * Tunnel module implements TUN/TAP tunneling (either with Wireguard or fake VPN) in
             * Kotlin. It also provides hosts lists filtering and has too much responsibility.
              */
        }

        moduleLegacy {
            // A catch all that is going away.
        }
    }

    sourceSets {
        /**
         * Source sets for modules. Note how they depend on each other.
          */

        moduleCore.java.srcDirs += 'src/core/kotlin'
        testModuleCore.java.srcDirs += 'src/test-core/kotlin'

        moduleTunnel.java.srcDirs += 'src/core/kotlin'
        moduleTunnel.java.srcDirs += 'src/tunnel/kotlin'
        testModuleTunnel.java.srcDirs += 'src/test-core/kotlin'
        testModuleTunnel.java.srcDirs += 'src/test-tunnel/kotlin'

        moduleG11n.java.srcDirs += 'src/core/kotlin'
        moduleG11n.java.srcDirs += 'src/g11n/kotlin'
        testModuleG11n.java.srcDirs += 'src/test-core/kotlin'
        testModuleG11n.java.srcDirs += 'src/test-g11n/kotlin'

        moduleVpn.java.srcDirs += 'src/core/kotlin'
        moduleVpn.java.srcDirs += 'src/vpn/kotlin'
        moduleVpn.jniLibs.srcDirs += 'src/vpn/jniLibs'
        testModuleVpn.java.srcDirs += 'src/test-core/kotlin'
        testModuleVpn.java.srcDirs += 'src/test-vpn/kotlin'

        moduleLegacy.java.srcDirs += 'src/core/kotlin'
        moduleLegacy.java.srcDirs += 'src/tunnel/kotlin'
        moduleLegacy.java.srcDirs += 'src/legacy/kotlin'
        moduleLegacy.res.srcDirs += 'src/legacy/res'
        testModuleLegacy.java.srcDirs += 'src/test-core/kotlin'
        testModuleLegacy.java.srcDirs += 'src/test-tunnel/kotlin'
        testModuleLegacy.java.srcDirs += 'src/test-legacy/kotlin'

        /**
         * Source sets for flavors. Note how they put modules and flavor config together.
         */

        flavorFull.manifest.srcFile 'src/legacy/AndroidManifest.xml'
        flavorFull.java.srcDirs += 'src/core/kotlin'
        flavorFull.java.srcDirs += 'src/tunnel/kotlin'
        flavorFull.java.srcDirs += 'src/g11n/kotlin'
        flavorFull.java.srcDirs += 'src/vpn/kotlin'
        flavorFull.java.srcDirs += 'src/legacy/kotlin'
        flavorFull.java.srcDirs += 'src/flavor-adblocker/kotlin'
        flavorFull.jniLibs.srcDirs += 'src/vpn/jniLibs'
        flavorFull.res.srcDirs += 'src/legacy/res'
        flavorFull.res.srcDirs += 'src/flavor-adblocker/res'
        testFlavorFull.java.srcDirs += 'src/test-core/kotlin'
        testFlavorFull.java.srcDirs += 'src/test-tunnel/kotlin'
        testFlavorFull.java.srcDirs += 'src/test-g11n/kotlin'
        testFlavorFull.java.srcDirs += 'src/test-vpn/kotlin'

        flavorCommunity.manifest.srcFile 'src/legacy/AndroidManifest.xml'
        flavorCommunity.java.srcDirs += 'src/core/kotlin'
        flavorCommunity.java.srcDirs += 'src/tunnel/kotlin'
        flavorCommunity.java.srcDirs += 'src/g11n/kotlin'
        flavorCommunity.java.srcDirs += 'src/vpn/kotlin'
        flavorCommunity.java.srcDirs += 'src/legacy/kotlin'
        flavorCommunity.java.srcDirs += 'src/flavor-adblocker/kotlin'
        flavorCommunity.jniLibs.srcDirs += 'src/vpn/jniLibs'
        flavorCommunity.res.srcDirs += 'src/legacy/res'
        flavorCommunity.res.srcDirs += 'src/flavor-adblocker/res'

        flavorGoogle.manifest.srcFile 'src/legacy/AndroidManifest.xml'
        flavorGoogle.java.srcDirs += 'src/core/kotlin'
        flavorGoogle.java.srcDirs += 'src/tunnel/kotlin'
        flavorGoogle.java.srcDirs += 'src/g11n/kotlin'
        flavorGoogle.java.srcDirs += 'src/legacy/kotlin'
        flavorGoogle.java.srcDirs += 'src/flavor-dns/kotlin'
        flavorGoogle.res.srcDirs += 'src/legacy/res'
        flavorGoogle.res.srcDirs += 'src/flavor-dns/res'

        /**
         * Build types are cross combined with flavors to make a final release
          */

        debug.java.srcDirs += 'src/build-unofficial/kotlin'
        release.java.srcDirs += 'src/build-official/kotlin'
        release.res.srcDirs += 'src/build-official/res'
        official.java.srcDirs += 'src/build-official/kotlin'
        official.res.srcDirs += 'src/build-official/res'
        beta.java.srcDirs += 'src/build-official/kotlin'
        beta.res.srcDirs += 'src/build-official/res'
    }
}

dependencies {
    // Android support libraries
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'

    // Kotlin and its dependencies
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'com.github.salomonbrys.kodein:kodein:4.1.0'
    implementation 'nl.komponents.kovenant:kovenant-core:3.3.0'
    implementation 'nl.komponents.kovenant:kovenant-android:3.3.0'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:0.23.1"
//    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.0-M1'
    implementation 'io.paperdb:paperdb:2.6'
    implementation 'com.github.michaelbull:kotlin-result:1.0.8'

    // Proxy
    implementation 'org.pcap4j:pcap4j-core:1.7.0'
    implementation 'org.pcap4j:pcap4j-packetfactory-propertiesbased:1.7.0'
    implementation 'dnsjava:dnsjava:2.1.8'
    implementation 'org.slf4j:slf4j-nop:1.6.1'

    // UI libraries
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.sothree.slidinguppanel:library:3.4.0'
    implementation 'com.ramotion.foldingcell:folding-cell:1.2.2'
    implementation 'jp.wasabeef:blurry:3.0.0'
    implementation 'com.github.ps100000:PageIndicatorView:v1.0.4'

    // REST api
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
    implementation ("com.squareup.retrofit2:retrofit:$retrofitVersion"){
        exclude module: 'okhttp'
    }
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    // Testing and debugging
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}
